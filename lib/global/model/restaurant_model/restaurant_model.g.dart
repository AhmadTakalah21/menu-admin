// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'restaurant_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

RestaurantModel _$RestaurantModelFromJson(Map<String, dynamic> json) =>
    RestaurantModel(
      id: (json['id'] as num).toInt(),
      name: json['name'] as String,
      note: json['note'] as String,
      nameEn: json['name_en'] as String,
      nameAr: json['name_ar'] as String,
      noteEn: json['note_en'] as String,
      noteAr: json['note_ar'] as String,
      nameUrl: json['name_url'] as String,
      facebookUrl: json['facebook_url'] as String?,
      instagramUrl: json['instagram_url'] as String?,
      whatsappPhone: json['whatsapp_phone'] as String?,
      endDate: json['end_date'] as String,
      messageBad: json['message_bad'] as String?,
      messageGood: json['message_good'] as String?,
      messagePerfect: json['message_perfect'] as String?,
      cover: json['cover'] as String,
      logo: json['logo'] as String,
      color: const ColorConverter().fromJson(json['color']),
      backgroundColor:
          const ColorConverter().fromJson(json['background_color']),
      fColorCategory: const ColorConverter().fromJson(json['f_color_category']),
      fColorSub: const ColorConverter().fromJson(json['f_color_sub']),
      fColorItem: const ColorConverter().fromJson(json['f_color_item']),
      fColorRating: const ColorConverter().fromJson(json['f_color_rating']),
      fontIdEn: (json['font_id_en'] as num).toInt(),
      fontIdAr: (json['font_id_ar'] as num).toInt(),
      consumerSpending: (json['consumer_spending'] as num).toInt(),
      localAdmin: (json['local_administration'] as num).toInt(),
      reconstruction: (json['reconstruction'] as num).toInt(),
      isAdv: (json['is_advertisement'] as num).toInt(),
      isNews: (json['is_news'] as num).toInt(),
      isRate: (json['is_rate'] as num).toInt(),
      rateFormat: (json['rate_format'] as num).toInt(),
      isActive: (json['is_active'] as num).toInt(),
      isTable: (json['is_table'] as num).toInt(),
      visited: (json['visited'] as num).toInt(),
      isOrder: (json['is_order'] as num).toInt(),
      isTaxes: (json['is_taxes'] as num).toInt(),
      cityId: (json['city_id'] as num).toInt(),
      emojiId: (json['emoji_id'] as num).toInt(),
      menuTemplateId: (json['menu_template_id'] as num).toInt(),
      superAdminId: (json['super_admin_id'] as num).toInt(),
      isWelcomeMassege: (json['is_welcome_massege'] as num).toInt(),
      welcome: json['welcome'] as String,
      question: json['question'] as String,
      ifAnswerNo: json['if_answer_no'] as String,
      latitude: json['latitude'] as String?,
      longitude: json['longitude'] as String?,
      isSubMove: (json['is_sub_move'] as num).toInt(),
      isDelivery: (json['is_delivery'] as num).toInt(),
      isTakeout: (json['is_takeout'] as num).toInt(),
      birthdayMessage: json['birthday_message'] as String?,
      imageOrColor: (json['image_or_color'] as num).toInt(),
      qrOffline: json['qr_offline'] as String?,
      qrTakeout: json['qr_takeout'] as String?,
      backgroundImageHomePage: json['background_image_home_page'] as String?,
      backgroundImageCategory: json['background_image_category'] as String?,
      backgroundImageSub: json['background_image_sub'] as String?,
      backgroundImageItem: json['background_image_item'] as String?,
      rateOpacity: (json['rate_opacity'] as num?)?.toInt(),
      subOpacity: (json['sub_opacity'] as num?)?.toDouble(),
      imageOrWrite: (json['image_or_write'] as num).toInt(),
      exchangeRate: (json['exchange_rate'] as num?)?.toInt(),
      logoShape: (json['logo_shape'] as num).toInt(),
      showMoreThanOnePrice: (json['show_more_than_one_price'] as num).toInt(),
      messageInHomePage: json['message_in_home_page'] as String,
      logoHomePage: json['logo_home_page'] as String,
      favLang: json['fav_lang'] as String,
      fontSizeWelcome: (json['font_size_welcome'] as num?)?.toInt(),
      fontTypeWelcome: (json['font_type_welcome'] as num?)?.toInt(),
      fontSizeCategory: (json['font_size_category'] as num?)?.toInt(),
      fontTypeCategoryEn: (json['font_type_category_en'] as num).toInt(),
      fontTypeCategoryAr: (json['font_type_category_ar'] as num).toInt(),
      fontSizeItem: (json['font_size_item'] as num?)?.toInt(),
      fontTypeItemEn: (json['font_type_item_en'] as num).toInt(),
      fontTypeItemAr: (json['font_type_item_ar'] as num).toInt(),
      fontBoldCategory: (json['font_bold_category'] as num?)?.toInt(),
      fontBoldItem: (json['font_bold_item'] as num?)?.toInt(),
      emptyImage: json['empty_image'] as String,
      homeOpacity: (json['home_opacity'] as num?)?.toInt(),
      priceKm: (json['price_km'] as num).toDouble(),
      priceType: json['price_type'] as String,
      shareItemWhatsapp: json['share_item_whatsapp'] as String,
      adminId: (json['admin_id'] as num?)?.toInt(),
    );

Map<String, dynamic> _$RestaurantModelToJson(RestaurantModel instance) =>
    <String, dynamic>{
      'id': instance.id,
      'name': instance.name,
      'note': instance.note,
      'name_en': instance.nameEn,
      'name_ar': instance.nameAr,
      'note_en': instance.noteEn,
      'note_ar': instance.noteAr,
      'name_url': instance.nameUrl,
      'facebook_url': instance.facebookUrl,
      'instagram_url': instance.instagramUrl,
      'whatsapp_phone': instance.whatsappPhone,
      'end_date': instance.endDate,
      'message_bad': instance.messageBad,
      'message_good': instance.messageGood,
      'message_perfect': instance.messagePerfect,
      'cover': instance.cover,
      'logo': instance.logo,
      'color': const ColorConverter().toJson(instance.color),
      'background_color':
          const ColorConverter().toJson(instance.backgroundColor),
      'f_color_category':
          const ColorConverter().toJson(instance.fColorCategory),
      'f_color_sub': const ColorConverter().toJson(instance.fColorSub),
      'f_color_item': const ColorConverter().toJson(instance.fColorItem),
      'f_color_rating': const ColorConverter().toJson(instance.fColorRating),
      'font_id_en': instance.fontIdEn,
      'font_id_ar': instance.fontIdAr,
      'consumer_spending': instance.consumerSpending,
      'local_administration': instance.localAdmin,
      'reconstruction': instance.reconstruction,
      'is_advertisement': instance.isAdv,
      'is_news': instance.isNews,
      'is_rate': instance.isRate,
      'rate_format': instance.rateFormat,
      'is_active': instance.isActive,
      'is_table': instance.isTable,
      'visited': instance.visited,
      'is_order': instance.isOrder,
      'is_taxes': instance.isTaxes,
      'city_id': instance.cityId,
      'emoji_id': instance.emojiId,
      'menu_template_id': instance.menuTemplateId,
      'super_admin_id': instance.superAdminId,
      'is_welcome_massege': instance.isWelcomeMassege,
      'welcome': instance.welcome,
      'question': instance.question,
      'if_answer_no': instance.ifAnswerNo,
      'latitude': instance.latitude,
      'longitude': instance.longitude,
      'is_sub_move': instance.isSubMove,
      'is_delivery': instance.isDelivery,
      'is_takeout': instance.isTakeout,
      'birthday_message': instance.birthdayMessage,
      'image_or_color': instance.imageOrColor,
      'qr_offline': instance.qrOffline,
      'qr_takeout': instance.qrTakeout,
      'background_image_home_page': instance.backgroundImageHomePage,
      'background_image_category': instance.backgroundImageCategory,
      'background_image_sub': instance.backgroundImageSub,
      'background_image_item': instance.backgroundImageItem,
      'rate_opacity': instance.rateOpacity,
      'sub_opacity': instance.subOpacity,
      'image_or_write': instance.imageOrWrite,
      'exchange_rate': instance.exchangeRate,
      'logo_shape': instance.logoShape,
      'show_more_than_one_price': instance.showMoreThanOnePrice,
      'message_in_home_page': instance.messageInHomePage,
      'logo_home_page': instance.logoHomePage,
      'fav_lang': instance.favLang,
      'font_size_welcome': instance.fontSizeWelcome,
      'font_type_welcome': instance.fontTypeWelcome,
      'font_size_category': instance.fontSizeCategory,
      'font_type_category_en': instance.fontTypeCategoryEn,
      'font_type_category_ar': instance.fontTypeCategoryAr,
      'font_size_item': instance.fontSizeItem,
      'font_type_item_en': instance.fontTypeItemEn,
      'font_type_item_ar': instance.fontTypeItemAr,
      'font_bold_category': instance.fontBoldCategory,
      'font_bold_item': instance.fontBoldItem,
      'empty_image': instance.emptyImage,
      'home_opacity': instance.homeOpacity,
      'price_km': instance.priceKm,
      'price_type': instance.priceType,
      'share_item_whatsapp': instance.shareItemWhatsapp,
      'admin_id': instance.adminId,
    };
